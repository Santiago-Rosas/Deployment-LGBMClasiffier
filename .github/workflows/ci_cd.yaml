#name: Continuous Integration and Continuous Deployment
##on: 
##  push:
##    branches:
##     - main
##  workflow_run:
##    workflows: ["Continuous training"]
##    branches : [main]
##    types:
##      - completed
##  workflow_dispatch:
##    inputs:
##      reason:
##        description: Why running this?
##        required: false
##        default: running CI/CD
##jobs:
##  ci_cd:
##    runs-on: ubuntu-latest
##    permissions:
##      contents: write
##      pull-requests: write 
#      issues: read
#      packages: none
#    env:
#      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
#      REGION:  ${{ secrets.REGION }}
#      PROJECTS_ID: ${{ secrets.PROJECT_ID }}
#      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
#      SERVICE_ACCOUNT_KEY: ${{secrets.SERVICE_ACCOUNT_KEY}}
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#      - name: Set environment and bring the model and scaler
#        run: |
#          pip3 install virtualenv 
#          virtualenv venv 
#          source venv/bin/activate
#          pip install dvc[gs]
#          export GOOGLE_APPLICATION_CREDENTIALS=$(python utilities/setter.py)
#          dvc pull models/model.pk.dvc -r model-storage
#          dvc pull models/scaler.pk.dvc -r model-storage
#          dvc pull models/column_equivalence.pk.dvc -r model-storage
#    
#      - name: set up GCLOUD SDK
#        uses: google-github-actions/setup-gcloud@v0
#        with: 
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          project_id: ${{ secrets.PROJECT_ID }}
#      - name: build and push 
#        run: |
#          docker build . -t $REGISTRY_NAME:$GITHUB_SHA
#          gcloud auth configure-docker -q
#          sudo -u $USER docker push $REGISTRY_NAME:$GITHUB_SHA
#      - name: Deploy in Cloud Run 
#        run: |
#          gcloud run services update $SERVICE_NAME --region=$REGION --image=$REGISTRY_NAME:$GITHUB_SHA
#
#
#
#
#
#